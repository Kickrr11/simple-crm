name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/accounts
    metadata:
      title: 'Accounts create.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 2 characters.'
        required: true
        example: 'n'
        type: string
      description:
        name: description
        description: 'Must be at least 2 characters.'
        required: false
        example: ri
        type: string
      address:
        name: address
        description: 'Must be at least 2 characters.'
        required: false
        example: ''
        type: string
      postal_code:
        name: postal_code
        description: 'Must be at least 2 characters.'
        required: false
        example: xd
        type: string
      city:
        name: city
        description: 'Must be at least 2 characters.'
        required: false
        example: ''
        type: string
      is_active:
        name: is_active
        description: ''
        required: true
        example: at
        type: string
      country_code:
        name: country_code
        description: ''
        required: false
        example: null
        type: string
      user_id:
        name: user_id
        description: ''
        required: true
        example: 4
        type: integer
    responses:
      -
        status: 201
        content: |
          {
              "success": true,
              "code": 201,
              "locale": "en",
              "message": "OK",
              "data": {
                  "account": {
                      "name": "Stoltenberg, Ratke and Wyman",
                      "description": "Laudantium impedit cupiditate est. Earum ratione dolorem delectus totam. Iusto repellendus dolor atque delectus dolorum sunt at.",
                      "address": "35596 Lila Prairie\nPort Chauncey, LA 80430-0752",
                      "postal_code": "54129",
                      "city": "Skileshaven",
                      "is_active": 1,
                      "country_code": "GG",
                      "user_id": 1,
                      "updated_at": "2021-11-22T14:11:05.000000Z",
                      "created_at": "2021-11-22T14:11:05.000000Z",
                      "id": 1
                  }
              }
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/accounts/{id}'
    metadata:
      title: 'Account shows single .'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the account.'
        required: true
        example: 10
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "success": true,
              "code": 200,
              "locale": "en",
              "message": "OK",
              "data": {
                  "account": {
                      "id": 1,
                      "name": "Corwin Ltd",
                      "user_id": "1",
                      "description": "Molestias deserunt sed tenetur nostrum neque sed blanditiis. Quod consequatur quibusdam aut. Dolore quia vitae cum quae quisquam quia. Fuga rerum unde ipsa.",
                      "address": "24764 Walter Brooks\nLake Gracie, OK 50893",
                      "city": "Schaeferton",
                      "postal_code": "38625-7681",
                      "country_code": "WS",
                      "is_active": "1",
                      "created_at": "2021-11-22T14:28:29.000000Z",
                      "updated_at": "2021-11-22T14:28:29.000000Z",
                      "contacts": []
                  }
              }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/accounts/{id}'
    metadata:
      title: 'Account updates an existing .'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the account.'
        required: true
        example: 1
        type: integer
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be at least 2 characters.'
        required: true
        example: dd
        type: string
      description:
        name: description
        description: 'Must be at least 2 characters.'
        required: false
        example: o
        type: string
      address:
        name: address
        description: 'Must be at least 2 characters.'
        required: false
        example: rf
        type: string
      postal_code:
        name: postal_code
        description: 'Must be at least 2 characters.'
        required: false
        example: ''
        type: string
      city:
        name: city
        description: 'Must be at least 2 characters.'
        required: false
        example: jm
        type: string
      is_active:
        name: is_active
        description: ''
        required: true
        example: magnam
        type: string
      country_code:
        name: country_code
        description: ''
        required: false
        example: null
        type: string
      user_id:
        name: user_id
        description: ''
        required: true
        example: 11
        type: integer
    responses:
      -
        status: 200
        content: |
          {
              "success": true,
              "code": 200,
              "locale": "en",
              "message": "OK",
              "data": {
                  "account": {
                      "id": 1,
                      "name": "Schiller Inc",
                      "user_id": "1",
                      "description": "Voluptate modi facere adipisci maxime quo. Facere a ut sed aperiam. Minus deserunt ab dolor iusto qui vero praesentium. Consequatur ut consequatur optio magni odio deleniti.",
                      "address": "3386 Tevin Shores Apt. 749\nDouglasborough, VT 51354-9497",
                      "city": "South Laruefurt",
                      "postal_code": "98006",
                      "country_code": "KE",
                      "is_active": "1",
                      "created_at": "2021-11-22T14:13:35.000000Z",
                      "updated_at": "2021-11-22T14:13:35.000000Z",
                      "contacts": []
                  }
              }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/accounts/{id}'
    metadata:
      title: 'Account deletes an existing.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the account.'
        required: true
        example: 17
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "success": true,
              "code": 200,
              "locale": "en",
              "message": "OK",
              "data": {
                  "value": "Account successfully deleted"
              }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/contacts
    metadata:
      title: 'Stores newly created contact.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'Must be at least 2 characters.'
        required: true
        example: lg
        type: string
      last_name:
        name: last_name
        description: 'Must be at least 2 characters.'
        required: true
        example: ''
        type: string
      job_title:
        name: job_title
        description: 'Must be at least 2 characters.'
        required: false
        example: ''
        type: string
      account_id:
        name: account_id
        description: ''
        required: true
        example: 3
        type: integer
      postal_code:
        name: postal_code
        description: 'Must be at least 2 characters.'
        required: false
        example: w
        type: string
      city:
        name: city
        description: 'Must be at least 2 characters.'
        required: false
        example: ''
        type: string
      address:
        name: address
        description: 'Must be at least 2 characters.'
        required: false
        example: q
        type: string
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: ryan.braden@example.net
        type: string
      country_code:
        name: country_code
        description: ''
        required: false
        example: null
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/contacts/{id}'
    metadata:
      title: 'Shows single contact.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the contact.'
        required: true
        example: 15
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/contacts/{id}'
    metadata:
      title: 'Updates an existing contact.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the contact.'
        required: true
        example: 10
        type: integer
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'Must be at least 2 characters.'
        required: true
        example: 'on'
        type: string
      last_name:
        name: last_name
        description: 'Must be at least 2 characters.'
        required: true
        example: ''
        type: string
      job_title:
        name: job_title
        description: 'Must be at least 2 characters.'
        required: false
        example: k
        type: string
      account_id:
        name: account_id
        description: ''
        required: true
        example: 17
        type: integer
      postal_code:
        name: postal_code
        description: 'Must be at least 2 characters.'
        required: false
        example: ''
        type: string
      city:
        name: city
        description: 'Must be at least 2 characters.'
        required: false
        example: nq
        type: string
      address:
        name: address
        description: 'Must be at least 2 characters.'
        required: false
        example: k
        type: string
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: qvonrueden@example.net
        type: string
      country_code:
        name: country_code
        description: ''
        required: false
        example: null
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/contacts/{id}'
    metadata:
      title: 'Deletes an existing contact.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the contact.'
        required: true
        example: 10
        type: integer
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/notes
    metadata:
      title: 'Returns all notes.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/accounts
    metadata:
      title: 'Accounts return all.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "success": true,
              "code": 200,
              "locale": "en",
              "message": "OK",
              "data": {
                  "accounts": {
                      "current_page": 1,
                      "data": [],
                      "first_page_url": "http:\/\/example.test\/api\/accounts?page=1",
                      "from": null,
                      "last_page": 1,
                      "last_page_url": "http:\/\/example.test\/api\/accounts?page=1",
                      "links": [
                          {
                              "url": null,
                              "label": "\u0026laquo; Previous",
                              "active": false
                          },
                          {
                              "url": "http:\/\/example.test\/api\/accounts?page=1",
                              "label": "1",
                              "active": true
                          },
                          {
                              "url": null,
                              "label": "Next \u0026raquo;",
                              "active": false
                          }
                      ],
                      "next_page_url": null,
                      "path": "http:\/\/example.test\/api\/accounts",
                      "per_page": 10,
                      "prev_page_url": null,
                      "to": null,
                      "total": 0
                  }
              }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/contacts
    metadata:
      title: 'Returns all contacts.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/notes
    metadata:
      title: 'Creates a new note.'
      description: ''
      authenticated: true
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      body:
        name: body
        description: 'Must be at least 2 characters.'
        required: true
        example: ''
        type: string
      noteable_type:
        name: noteable_type
        description: ''
        required: true
        example: consequuntur
        type: string
      noteable_id:
        name: noteable_id
        description: ''
        required: true
        example: 15
        type: integer
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: sbartoletti@example.net
        type: string
      password:
        name: password
        description: ''
        required: true
        example: aut
        type: string
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
           "access_token": "eyJ0eXA...",
           "token_type": "Bearer",
            "expires_at": "2022-..."
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: joesph.pouros@example.org
        type: string
      password:
        name: password
        description: ''
        required: true
        example: dolore
        type: string
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
           "access_token": "eyJ0eXA...",
           "token_type": "Bearer",
            "expires_at": "2022-..."
          }
        headers: []
        description: '200'
    responseFields: []
